{"version":3,"sources":["./src/app/orderbook/orderbook.component.html","./node_modules/@angular/material/table/index.d.ts.MatTable.html","./node_modules/@angular/material/table/index.d.ts.MatHeaderRow.html","./node_modules/@angular/material/table/index.d.ts.MatFooterRow.html","./node_modules/@angular/material/table/index.d.ts.MatRow.html","./node_modules/@angular/material/table/index.d.ts.MatTextColumn.html","./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.module.ts","./src/app/orderbook/orderbook.component.ts","./src/app/dashboard/dashboard.component.html"],"names":[],"mappings":"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","file":"dashboard-dashboard-module-ngfactory.js","sourcesContent":["<div>\n  <h3 class=\"text-center\">{{title}}</h3>\n</div>\n<div *ngIf=\"displayAsks?.length > 0\" style=\"height: 100%;\" class=\"fade-page\">\n\n  <div class=\"container --mobile\" *ngIf=\"currentWindowWidth < 992; else desktopTemplate\">\n    <div class=\"row\">\n      <div class=\"col info\">\n        {{firstSell - firstBid}} Spread\n      </div>\n    </div>\n    <div class=\" row\">\n      <div class=\"col\">\n\n        <table mat-table [dataSource]=\"displayBids\" class=\"mat-elevation-z8 bids-table\" style=\"width: 100%\">\n          <ng-container matColumnDef=\"Total\">\n            <th mat-header-cell *matHeaderCellDef> Total </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element[2]}} </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"Price\">\n            <th mat-header-cell *matHeaderCellDef> Price </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"price\"> {{element[0]}}\n              <div class=\"bg-div right\" *ngIf=\"element != null && element[2]!= null\"\n                [ngStyle]=\"{'height': '24px', 'width': ((element[2]/maxBid)*100) + '%'}\">\n              </div>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"['Price', 'Total']\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: ['Price', 'Total'];\">\n          </tr>\n        </table>\n      </div>\n      <div class=\"col\">\n        <table mat-table [dataSource]=\"displayAsks.reverse()\" class=\"mat-elevation-z8 asks-table\" style=\"width: 100%\">\n\n\n          <!-- <ng-container matColumnDef=\"Amount\">\n            <th mat-header-cell *matHeaderCellDef> Amount </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element[1]}} </td>\n          </ng-container> -->\n\n          <ng-container matColumnDef=\"Total\">\n            <th mat-header-cell *matHeaderCellDef> Total </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element[2]}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"Price\">\n            <th mat-header-cell *matHeaderCellDef> Price </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"price\"> {{element[0]}}\n              <div class=\"bg-div ask\" *ngIf=\"element && element[2] != null\"\n                [ngStyle]=\"{'height': '24px', 'width': ((element[2]/maxAsk)*100) + '%'}\">\n              </div>\n            </td>\n          </ng-container>\n          <tr mat-header-row *matHeaderRowDef=\"['Price', 'Total']\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: ['Price', 'Total'];let i = index;\">\n          </tr>\n        </table>\n\n      </div>\n    </div>\n\n  </div>\n\n  <ng-template #desktopTemplate>\n    <table mat-table [dataSource]=\"displayAsks\" class=\"mat-elevation-z8 asks-table\" style=\"width: 100%\">\n      <ng-container matColumnDef=\"Price\">\n        <th mat-header-cell *matHeaderCellDef> Price </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"price\"> {{element[0]}}\n          <div class=\"bg-div ask\" *ngIf=\"element && element[2] != null\"\n            [ngStyle]=\"{'height': '24px', 'width': ((element[2]/maxAsk)*100) + '%'}\">\n          </div>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Amount\">\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element[1]}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Total\">\n        <th mat-header-cell *matHeaderCellDef> Total </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element[2]}} </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"['Price', 'Amount', 'Total']\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: ['Price', 'Amount', 'Total'];let i = index;\">\n      </tr>\n    </table>\n\n    <div class=\"info\">\n      {{firstSell - firstBid}} Spread\n    </div>\n\n    <table mat-table [dataSource]=\"displayBids\" class=\"mat-elevation-z8 bids-table\" style=\"width: 100%\">\n\n      <ng-container matColumnDef=\"Price\">\n        <th mat-header-cell *matHeaderCellDef> Price </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"price\"> {{element[0]}}\n          <div class=\"bg-div\" *ngIf=\"element != null && element[2]!= null\"\n            [ngStyle]=\"{'height': '24px', 'width': ((element[2]/maxBid)*100) + '%'}\">\n          </div>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Amount\">\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element[1]}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Total\">\n        <th mat-header-cell *matHeaderCellDef> Total </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element[2]}} </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"['Price', 'Amount', 'Total']\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: ['Price', 'Amount', 'Total'];\">\n      </tr>\n    </table>\n  </ng-template>\n</div>","\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n","<ng-container cdkCellOutlet></ng-container>","<ng-container cdkCellOutlet></ng-container>","<ng-container cdkCellOutlet></ng-container>","\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardComponentRoutingModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  constructor(private http: HttpClient) { }\n\n  get(url: string): Observable<any>{\n    return this.http.get(url);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DashboardService } from './dashboard.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  resp: any;\n  dashboardName: string = '';\n  errorMessage: string = '';\n\n  constructor(private dashboardService: DashboardService, private actRoute: ActivatedRoute) { }\n\n\n  ngOnInit(): void {\n    this.dashboardName = this.actRoute.snapshot.params?.dashboardName;\n    if (this.dashboardName != null) {\n      this.getDashboardConfig();\n    }\n    else {\n      this.errorMessage = `Error while loading the dashboard page, dashboard name has not been defined!`\n    }\n\n  }\n  getDashboardConfig() {\n    this.dashboardService.get(`assets/${this.dashboardName}.config.json`)\n      .subscribe(\n        (data: any) => {\n          this.resp = data;\n        },\n        err => {\n          this.errorMessage = `Error while retrieving config for dashboard '${this.dashboardName}': ${err?.body || err?.message}`\n        }\n      );\n  }\n}\n","import { OrderbookModule } from './../orderbook/orderbook.module';\nimport { DashboardComponentRoutingModule } from './dashboard-routing.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardService } from './dashboard.service';\n\n\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    DashboardComponentRoutingModule,\n    OrderbookModule\n  ],\n  providers: [DashboardService]\n})\nexport class DashboardModule { }\n","import { Component, HostListener, Input, OnInit } from '@angular/core';\nimport { WebsocketService } from '../websocket.service';\n\ninterface IwebSocketResponse {\n  feed: string,\n  product_id: string,\n  bids: IOrderTuple[],\n  asks: IOrderTuple[],\n}\n\ntype IOrderTuple = [number, number, number?];\n\n\n@Component({\n  selector: 'app-orderbook',\n  templateUrl: './orderbook.component.html',\n  styleUrls: ['./orderbook.component.scss'],\n  providers: [WebsocketService],\n  host: {\n    '(window:resize)': 'onResize($event)'\n  }\n})\nexport class OrderbookComponent implements OnInit {\n\n  onResize(event) {\n    this.currentWindowWidth = event.target.innerWidth\n  }\n\n  bids: IOrderTuple[] = [];\n  asks: IOrderTuple[] = [];\n  displayAsks: IOrderTuple[] = [];\n  displayBids: IOrderTuple[] = [];\n  length = 8;\n  maxBid: number = -1;\n  maxAsk: number = -1;\n  firstBid: number = 0;\n  firstSell: number = 0;\n  title: string;\n  currentWindowWidth: number;\n\n  iterator = [];\n  constructor(public service: WebsocketService) {\n\n  }\n\n  @Input() set incomingData(value) {\n    if (value[\"bids\"] != null)\n      this.handleData(value);\n  }\n\n  @Input() set configuration(value) {\n    if (value != null) {\n      this.processConfiguration(value);\n    }\n  }\n\n  ngOnInit(): void {\n    for (let i = 0; i < this.length; i++) {\n      this.iterator.push(i);\n    }\n    this.currentWindowWidth = window.innerWidth;\n\n\n  }\n\n  processConfiguration(config: any) {\n    this.title = config.title;\n    this.service.connect();\n    this.service.sendMessage({ \"event\": config.event, \"feed\": config.feed, \"product_ids\": [config.product_id] });\n    this.service.socket$.subscribe(\n      msg => {\n        this.incomingData = msg;\n      },\n      err => console.log(err),\n    )\n  }\n\n  handleData(data: IwebSocketResponse) {\n    let localBIds = JSON.parse(JSON.stringify(this.bids))\n    data.bids.forEach((row) => {\n      const position = localBIds.findIndex(x => x[0] == row[0]);\n      if (position > -1) {\n        if (row[1] == 0) {\n          localBIds.splice(position, 1);\n        }\n        else {\n          localBIds[position] = [...row];\n        }\n      }\n      else if (row[1] != 0) {\n        localBIds.push([...row]);\n      }\n    });\n\n    localBIds = localBIds.\n      sort((a, b) => b[0] - a[0])\n    for (const [index, row] of localBIds.entries()) {\n      let add = row[1];\n      if (index !== 0) {\n        add += localBIds[index - 1][2]\n      }\n      row[2] = add;\n    }\n\n    this.bids = [...localBIds];\n    this.displayBids = [...this.truncateArray(localBIds, this.length)];\n    this.maxBid = this.displayBids[this.displayBids.length - 1][2];\n    this.firstBid = this.bids[0][0];\n    if (this.bids.length < this.length) {\n      debugger;\n    }\n\n    localBIds = JSON.parse(JSON.stringify(this.asks))\n    data.asks.forEach((row) => {\n      const position = localBIds.findIndex(x => x[0] == row[0]);\n      if (position > -1) {\n        if (row[1] == 0) {\n          localBIds.splice(position, 1);\n        }\n        else {\n          localBIds[position] = [...row];\n        }\n      }\n      else if (row[1] != 0) {\n        localBIds.push([...row]);\n      }\n    });\n\n    localBIds = localBIds.\n      sort((a, b) => a[0] - b[0])\n    for (const [index, row] of localBIds.entries()) {\n      let add = row[1];\n      if (index !== 0) {\n        add += localBIds[index - 1][2]\n      }\n      row[2] = add;\n    }\n    this.displayAsks = [...this.truncateArray(localBIds, this.length, true)];\n    this.asks = [...localBIds];\n    this.maxAsk = this.displayAsks[0][2];\n    this.firstSell = localBIds[0][0]\n    if (this.asks.length < this.length) {\n      debugger;\n    }\n\n  }\n\n  trackByMethod(index: number, el: any): number {\n    return index;\n  }\n\n  truncateArray(array: any[], length: number, reverse = false) {\n    if (!reverse) return array.slice(0, length);\n    return array.slice(0, length).reverse();\n  }\n\n}","<div class=\"container h-100\">\n  <div class=\"row\" *ngIf=\"!errorMessage; else errorTemplate\">\n    <div *ngFor=\"let column of resp?.layout?.columns\" class=\"col-{{column?.size}}\">\n      <div *ngFor=\"let widget of column.widgets\">\n        <div [ngSwitch]=\"widget.type\">\n          <div *ngSwitchCase=\"'orderbook'\">\n            <app-orderbook [configuration]=\"widget.configuration\">\n            </app-orderbook>\n          </div>\n          <div *ngSwitchDefault>\n            widget {{widget.type}} not implemented yet.\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n  <ng-template #errorTemplate>\n    <div class=\"alert-box error\"><span>error: </span> {{errorMessage}}</div>\n  </ng-template>\n</div>"],"sourceRoot":"webpack:///"}