{"version":3,"sources":["./src/environments/environment.ts","./src/app/widgets/orderbook/orderbook.module.ts","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/websocket-service/websocket.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  wsEndpoint: 'wss://www.cryptofacilities.com/ws/v1'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DecimalPipe } from '@angular/common';\nimport { OrderbookComponent } from './orderbook.component';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTableModule } from '@angular/material/table';\n\n\n\n@NgModule({\n  declarations: [OrderbookComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MatGridListModule,\n    MatTableModule,\n  ],\n  providers: [DecimalPipe],\n  exports: [OrderbookComponent],\n})\nexport class OrderbookModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport {MatTableModule} from '@angular/material/table';\nimport { FunctionPipe } from '@pipes/function-pipe/function.pipe';\n\n\n@NgModule({\n  declarations: [FunctionPipe],\n  imports: [\n    CommonModule,\n    MatGridListModule,\n    MatTableModule\n  ],\n  exports:[FunctionPipe]\n})\nexport class SharedModule { }\n","import { Router } from '@angular/router';\nimport { WebsocketService } from '@services/websocket-service/websocket.service';\nimport { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'svenbook';\n\n  constructor(public service: WebsocketService,  private router: Router) {\n\n  }\n\n  /*\n    Demo function for illustration purposes only\n  */\n  demoSwitch() {\n    const target =  window.location.pathname.includes('orderbook-single') ? 'orderbook-multiple' : 'orderbook-single';\n    this.router.navigateByUrl(`/dashboards/${target}`);\n  }\n}\n","import { RouterModule } from '@angular/router';\nimport { SharedModule } from './shared/shared.module';\nimport { WebsocketService } from '@services/websocket-service/websocket.service';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { OrderbookModule } from './widgets/orderbook/orderbook.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTableModule } from '@angular/material/table';\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    RouterModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    OrderbookModule,\n    SharedModule,\n    MatTableModule,\n    HttpClientModule\n  ],\n  providers: [WebsocketService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\nimport { environment } from '@environments/environment';\nimport { catchError, switchAll } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nexport const WS_ENDPOINT = environment.wsEndpoint;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService implements OnDestroy {\n  public socket$!: WebSocketSubject<any>;\n  private messagesSubject$ = new Subject<any>();\n  public messages$ = this.messagesSubject$.pipe(switchAll(), catchError(e => { throw e }));\n\n  public connect(cfg: { reconnect: boolean } = { reconnect: false }): void {\n\n    if (!this.socket$ || this.socket$.closed) {\n      this.socket$ = this.getNewWebSocket(WS_ENDPOINT);\n    }\n  }\n\n  sendMessage(msg: any) {\n    this.socket$.next(msg);\n  }\n  close() {\n    this.socket$.complete();\n  }\n\n  private getNewWebSocket(webSocketUri) {\n    return webSocket({\n      url: webSocketUri,\n      openObserver: {\n        next: () => {\n          console.log('[DataService]: connection ok');\n        }\n      },\n      closeObserver: {\n        next: () => {\n          console.log('[DataService]: connection closed');\n          this.socket$.error('connection closed');\n          this.socket$ = undefined;\n          this.connect({ reconnect: true });\n        }\n      },\n\n    });\n  }\n\n  public ngOnDestroy() {\n    this.socket$?.unsubscribe();\n  }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'dashboards/orderbook-single',\n    pathMatch: 'full'\n  },\n  {\n    path: 'dashboards/:dashboardName',\n    loadChildren: () => import('./core/dashboard/dashboard.module').then(m => m.DashboardModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule, RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<h3>{{title}}</h3>\n<i (click)=\"demoSwitch()\" class=\"fas fa-exchange-alt h3 p-3 redirect\"></i>\n\n<router-outlet></router-outlet>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}